services:
  db:
    image: postgres:17.5-alpine
    container_name: postgres 
    environment:
      POSTGRES_USER: ${POSTGRES_USER} 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: vocab_mastery 
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5

  migrate:
    image: migrate/migrate:latest
    restart: "no"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/vocab_mastery?sslmode=disable",
      "up"
    ]

  app:
    build:
      context: . 
      dockerfile: Dockerfile
    develop:
      watch:
        - action: rebuild
          path: ./internal
        - action: rebuild
          path: ./cmd
    container_name: vocab_mastery 
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=vocab_mastery
      - MAILTRAP_USER=${MAILTRAP_USER}
      - MAILTRAP_PASSWORD=${MAILTRAP_PASSWORD}
    restart: unless-stopped

  client:
    image: node:23-alpine
    container_name: vocab_mastery_client
    build:
      context: ./client
      dockerfile: ./Dockerfile
    volumes:
      - ./client:/app
      - /app/node_modules
    ports: 
      - 4200:4200
    working_dir: /app
    command: npm run start -- --host 0.0.0.0 --poll=1000


